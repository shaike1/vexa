version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: vexa_db
      POSTGRES_USER: vexa_user
      POSTGRES_PASSWORD: vexa_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./libs/shared-models/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "15438:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vexa_user -d vexa_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  admin-api:
    image: vexa-admin-api:latest
    environment:
      DATABASE_URL: postgresql://vexa_user:vexa_password@postgres:5432/vexa_db
      REDIS_URL: redis://redis:6379
      ADMIN_API_TOKEN: ${ADMIN_API_TOKEN:-token}
    ports:
      - "18057:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  bot-manager:
    image: vexa-bot-manager:latest
    environment:
      DATABASE_URL: postgresql://vexa_user:vexa_password@postgres:5432/vexa_db
      REDIS_URL: redis://redis:6379
      ADMIN_API_TOKEN: ${ADMIN_API_TOKEN:-token}
    ports:
      - "18081:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  whisperlive-cpu:
    image: vexaai/whisperlive-cpu:latest
    environment:
      DEVICE_TYPE: cpu
      REDIS_URL: redis://redis:6379
    ports:
      - "9090:9090"
      - "9091:9091"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      redis:
        condition: service_healthy

  ai-service-adapter:
    image: vexa-ai-service-adapter:latest
    environment:
      REDIS_URL: redis://redis:6379
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy

  transcription-collector:
    image: vexa-transcription-collector:latest
    environment:
      DATABASE_URL: postgresql://vexa_user:vexa_password@postgres:5432/vexa_db
      REDIS_URL: redis://redis:6379
    ports:
      - "18123:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  websocket-proxy:
    image: vexa-websocket-proxy:latest
    environment:
      WHISPERLIVE_URL: ${WHISPER_LIVE_URL:-ws://whisperlive-cpu:9090}
      REDIS_URL: redis://redis:6379
    ports:
      - "8088:8088"
      - "8090:8090"
    depends_on:
      - redis

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "18080:80"
      - "18085:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  default:
    name: vexa_default
