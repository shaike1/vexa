services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-vexa_db}
      POSTGRES_USER: ${POSTGRES_USER:-vexa_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-vexa_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./libs/shared-models/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_HOST_PORT:-15438}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-vexa_user} -d ${POSTGRES_DB:-vexa_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    image: vexa-api-gateway:local
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-vexa_user}:${POSTGRES_PASSWORD:-vexa_password}@postgres:5432/${POSTGRES_DB:-vexa_db}
      REDIS_URL: redis://redis:6379
      ADMIN_API_TOKEN: ${ADMIN_API_TOKEN:-token}
    ports:
      - "${API_GATEWAY_HOST_PORT:-18056}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  admin-api:
    build:
      context: .
      dockerfile: services/admin-api/Dockerfile
    image: vexa-admin-api:local
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-vexa_user}:${POSTGRES_PASSWORD:-vexa_password}@postgres:5432/${POSTGRES_DB:-vexa_db}
      REDIS_URL: redis://redis:6379
      ADMIN_API_TOKEN: ${ADMIN_API_TOKEN:-token}
    ports:
      - "${ADMIN_API_HOST_PORT:-18057}:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  bot-manager:
    build:
      context: .
      dockerfile: services/bot-manager/Dockerfile
    image: vexa-bot-manager:local
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-vexa_user}:${POSTGRES_PASSWORD:-vexa_password}@postgres:5432/${POSTGRES_DB:-vexa_db}
      REDIS_URL: redis://redis:6379
      ADMIN_API_TOKEN: ${ADMIN_API_TOKEN:-token}
      WEBSOCKET_PROXY_HOST: websocket-proxy
      WEBSOCKET_PROXY_PORT: 8090
    ports:
      - "18081:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      websocket-proxy:
        condition: service_started

  whisperlive-cpu:
    image: ${WHISPERLIVE_IMAGE:-vexaai/whisperlive-cpu:latest}
    environment:
      DEVICE_TYPE: cpu
      REDIS_URL: redis://redis:6379
    ports:
      - "9090:9090"
      - "9091:9091"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      redis:
        condition: service_healthy

  ai-service-adapter:
    build:
      context: .
      dockerfile: services/ai-service-adapter/Dockerfile
    image: vexa-ai-service-adapter:local
    environment:
      REDIS_URL: redis://redis:6379
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy

  transcription-collector:
    build:
      context: .
      dockerfile: services/transcription-collector/Dockerfile
    image: vexa-transcription-collector:local
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-vexa_user}:${POSTGRES_PASSWORD:-vexa_password}@postgres:5432/${POSTGRES_DB:-vexa_db}
      REDIS_URL: redis://redis:6379
    ports:
      - "${TRANSCRIPTION_COLLECTOR_HOST_PORT:-18123}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  websocket-proxy:
    build:
      context: ./services/websocket-proxy
      dockerfile: Dockerfile
    image: vexa-websocket-proxy:local
    environment:
      WHISPERLIVE_URL: ${WHISPER_LIVE_URL:-ws://whisperlive-cpu:9090}
      REDIS_URL: redis://redis:6379
    ports:
      - "8088:8088"
      - "8090:8090"
    depends_on:
      - redis

  whisperlive-gpu:
    image: ${WHISPERLIVE_GPU_IMAGE:-ghcr.io/collabora/whisperlive-gpu:latest}
    environment:
      DEVICE_TYPE: gpu
      REDIS_URL: redis://redis:6379
      NVIDIA_VISIBLE_DEVICES: all
    ports:
      - "9090:9090"
      - "9091:9091"
    gpus: all
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      redis:
        condition: service_healthy

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "${TRAEFIK_WEB_HOST_PORT:-18080}:80"
      - "${TRAEFIK_DASHBOARD_HOST_PORT:-18085}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  default:
    name: vexa_default
